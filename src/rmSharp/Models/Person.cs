// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using DelegateDecompiler;
using System;
using System.Collections.Generic;
using System.Linq;

namespace rmSharp
{
    public enum Sex { Male = 0, Female = 1, unknown = 2 };

    public partial class Person
    {
        public Person() { }
        public Person(string surname, string given, Sex sex)
        {
            this.Names.Add(new Name
            {
                Surname = surname,
                Given = given,
                IsPrimary = true,
            });

            this.Sex = sex;
        }

        #region properties -------------------------------------------------

        public long PersonId { get; set; }
        public string UniqueId { get; set; } = Guid.NewGuid().toGedUid();
        public Sex Sex { get; set; } = Sex.unknown;
        public long ParentId { get; set; }
        public long SpouseId { get; set; }
        public long Color { get; set; }
        public long Color1 { get; set; }
        public long Color2 { get; set; }
        public long Color3 { get; set; }
        public long Color4 { get; set; }
        public long Color5 { get; set; }
        public long Color6 { get; set; }
        public long Color7 { get; set; }
        public long Color8 { get; set; }
        public long Color9 { get; set; }
        public long Relate1 { get; set; }
        public long Relate2 { get; set; }
        public long Flags { get; set; }
        public bool Living { get; set; }
        public bool IsPrivate { get; set; } = false;
        public long Proof { get; set; }
        public long Bookmark { get; set; }
        public string Note { get; set; } = string.Empty;
        public DateTime ChangeDate { get; set; } = DateTime.Now;
        #endregion

        #region navigation -------------------------------------------------

        public virtual ICollection<ChildInfo> ParentRelations { get; set; } = [];
        public virtual ICollection<Name> Names { get; set; } = [];
        public virtual ICollection<Address> Addresses { get; set; } = [];
        public virtual ICollection<PersonEvent> Events { get; set; } = [];
        public virtual ICollection<Citation> Citations { get; set; } = [];
        public virtual ICollection<PersonWebTag> WebTags { get; set; } = [];
        public virtual ICollection<Medium> Media { get; set; } = [];
        public virtual ICollection<Task> Tasks { get; set; } = [];
        internal protected virtual ICollection<Family> _familiesF { get; set; } = [];
        internal protected virtual ICollection<Family> _familiesM { get; set; } = [];

        [Decompile]
        public Name PrimaryName => Names.First(n => n.NameType == NameTypes.Primary);

        [Decompile]
        public ICollection<Family> Families => _familiesF.Union(_familiesM).ToList();

        [Decompile]
        public ICollection<Person> Children => Families.SelectMany(f => f.ChildInfos).Select(cr => cr.Child).ToList();

        #endregion

        public override string ToString() => $"{PrimaryName.Surname} {PrimaryName.Given}";
    }
}