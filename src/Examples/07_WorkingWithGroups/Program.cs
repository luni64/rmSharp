
/*********************************************************************************** 
 * Uses an empty database which will be regenerated at compiletime 
 * 
 * This example creates a few simple individuals, and combines them to a family.
 * It then generates tree groups and assigns the genreated individuals to those groups.
 * 
 * To verify, open the generated database with RootsMagic (the generated database 
 * can be found at "...\07_WorkingWithGroups\bin\Debug\net8.0\empty.rmtree")
 * 
 ******************************************************************************/

using System;
using System.Diagnostics;
using System.Linq;
using static System.Console;

namespace rmSharp.Examples
{
    internal class Program
    {
        static void Main(string[] args)
        {
            DB.sqLiteFile = "empty.rmTree";

            using (var db = new DB())
            {
                var Pete = new Person("Smith", "Peter", Sex.Male);
                var Paula = new Person("Miller", "Paula", Sex.Female);
                var Tom1 = new Person("Smith", "Thomas", Sex.Male);
                var Mary = new Person("Jefferson", "Mary", Sex.Male);
                var Tom2 = new Person("Baker", "Tom", Sex.Male);

                var theSmiths = new Family(Pete, Paula);
                theSmiths.AddChild(Tom1);

                db.Persons.AddRange(Pete, Paula, Tom1, Mary, Tom2); // Register the new entities in the database context
                db.Families.Add(theSmiths);
                db.SaveChanges();                                   // Groups need the PersonIds which are generated by the database.
                                                                    // -> we need to persist new entities before working with groups

                Group smithGroup = new("The Smith Group");          // generate a new group 
                smithGroup.Persons.AddRange([Pete, Paula, Tom1]);   // and add the Smith family members to it

                Group tomGroup = new("All Toms");                   // make another group 
                tomGroup.Persons.AddRange([Tom1, Tom2]);            // and add the Toms to it

                Group lonelyGroup = new("Lonely Mary");             // make yet another group 
                lonelyGroup.Persons.Add(Mary);                                              
                
                db.AddRange(smithGroup, tomGroup, lonelyGroup);     // register the groups in the db context

                
                // Add some tasks 
                var reminder = new Task("Check Smith-Group membership", startDate: DateTime.Now.AddDays(30));                                
                foreach (var p in smithGroup.Persons)
                {
                    p.Tasks.Add(reminder);
                }
                Pete.Tasks.Add(new Task("Proof for the marriage to Paula missing", DateTime.Now.AddDays(100)));
                
                db.SaveChanges();                                   // and write everything into the database                


                // Readout the generated groups, display its members and attached tasks
                foreach (var group in db.Groups)                  
                {
                    WriteLine(group.Name);
                    foreach (var person in group.Persons)
                    {
                        WriteLine($"   -{person.PrimaryName} ({person.PersonId})");
                        foreach(var task in person.Tasks)
                        {
                            WriteLine($"     -Task: {task.Name} ({task.StartDate})");
                        }
                    }
                    WriteLine();
                }


                /* Prints:
                The Smith Group
                   -Smith Peter (1)
                     -Task: Check Smith-Group membership (10 JUL 2024)
                     -Task: Proof for the marriage to Paula missing (18 SEP 2024)
                   -Miller Paula (2)
                     -Task: Check Smith-Group membership (10 JUL 2024)
                   -Smith Thomas (3)
                     -Task: Check Smith-Group membership (10 JUL 2024)

                All Toms
                   -Smith Thomas (3)
                     -Task: Check Smith-Group membership (10 JUL 2024)
                   -Baker Tom (5)

                Lonely Mary
                   -Jefferson Mary (4)
                 */
            }
        }
    }
}
